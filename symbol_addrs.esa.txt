// rodata migration

D_80014828 = 0x80014828; // force_not_migration:true
D_8001483C = 0x8001483C; // force_not_migration:true
D_80014858 = 0x80014858; // force_not_migration:true

//D_80014DDC = 0x80014DDC; // force_not_migration:true
D_80014DF8 = 0x80014DF8; // force_not_migration:true
D_80014E08 = 0x80014E08; // force_not_migration:true
D_80014E20 = 0x80014E20; // force_not_migration:true

// functions

game_loop                        = 0x80017554;

play_sound_effect_at_location    = 0x8001BA00;
func_8001E3D0                    = 0x8001E3D0; // type:func
set_volume                       = 0x8001F1A0;
func_8001FFF4                    = 0x8001FFF4; // type:func
reset_camera                     = 0x8002A3D0;
set_game_state                   = 0x80047290;
get_game_state                   = 0x800478FC;
copy_command_struct              = 0x80047D38;
load_commands_into_object        = 0x80047D74;
spawn_object                     = 0x8004D278;
get_closest_waypoint_index       = 0x8004CBD4;
func_8004E044                    = 0x8004E044; // type:func
run_commands                     = 0x80055B80;
set_floor_level                  = 0x80056298;
set_water_level                  = 0x80056340;
fire_homing_missile              = 0x80056BA8;
spawn_temporary_object           = 0x80056E34;
func_80057028                    = 0x80057028; // type:func
spawn_animal                     = 0x8005FCB4;
can_swim                         = 0x80060DAC;
can_fly                          = 0x80060DE0;
perform_behavior_lion            = 0x80064FB4;
perform_behavior_hippo           = 0x8006521C;
perform_behavior_king_rat        = 0x800676D4;
perform_behavior_rat             = 0x800678AC;
perform_behavior_sheep           = 0x80067E1C;
perform_behavior_penguin         = 0x800684AC;
perform_behavior_seagull         = 0x8006B384;

func_8006C510                    = 0x8006C510; // type:func

vector_add                       = 0x800742A0;
vector_subtract                  = 0x800742E0;
normalize_vector                 = 0x800744EC;
get_angle_between_vectors        = 0x800746EC;
cross_product                    = 0x800745E0;
get_magnitude                    = 0x80074448;
vector_multiply_by               = 0x80074320;
vector_divide_by                 = 0x8007439C;
dot_product                      = 0x8007455C;
animal_jump                      = 0x8007CEF0;
osd_draw_timer                   = 0x8007E070;
load_animal                      = 0x800817B4;
recharge_skill                   = 0x80081A50;
check_and_set_species_encountered = 0x80081878;
apply_recoil                     = 0x80082CD4;
fire_cannonball_1                = 0x800824C0;
fire_cannonball_2                = 0x800828D8;
add_regular_trail                = 0x800884F4;
add_simple_trail                 = 0x800889C4;
func_80088FEC                    = 0x80088FEC; // type:func
rat_drop_mine                    = 0x8008A82C;
rat_bite                         = 0x8008A93C;
king_rat_bugel_call              = 0x8008A988;
king_rat_fart                    = 0x8008AA1C;
fire_fox_fire_missile            = 0x8008BE28;
fox_tail_attack                  = 0x8008BF04;
fox_warp                         = 0x8008BFB4;
ram_headbutt                     = 0x8008CF00;
func_8008E150                    = 0x8008E150; // type:func
racing_dog_fire_missile          = 0x8008F54C;
dog_bite                         = 0x8008F6D8;
flying_dog_fire_gun              = 0x8008F6F8;
flying_dog_drop_bomb             = 0x8008F73C;
racing_dog_turbo                 = 0x8008F79C;
racing_mouse_turbo               = 0x80090330;
penguin_throw_snowball           = 0x80090F54;
ski_husky_fire_missile           = 0x800917D4;
ski_husky_turbo                  = 0x80091994;
walrus_fire_missile              = 0x800932F0;
walrus_turbo                     = 0x8009346C;
polar_tank_drop_mine             = 0x800943F0;
polar_tank_fire_cannon           = 0x80094478;
racing_tortoise_turbo            = 0x80095F4C;
biker_hyena_fire_missile         = 0x80096500;
lion_roar                        = 0x80096C5C;
drop_sticky_mine                 = 0x80097E2C;
hippo_spit                       = 0x80097FD4;
func_8009A794                    = 0x8009A794; // type:func
func_8009B26C                    = 0x8009B26C; // type:func
func_8009E114                    = 0x8009E114; // type:func
parrot_fly                       = 0x800A06C4;
printf                           = 0x800A070C;
spawn_dizzy_stars_big            = 0x800A2A54;
spawn_dizzy_stars_medium         = 0x800A2D30;
spawn_dizzy_starts_small         = 0x800A300C;
kick_up_dust_small               = 0x800A32EC;
kick_up_dust_big                 = 0x800A3404;
create_particle_effect           = 0x800A401C;
func_800A4F90                    = 0x800A4F90; // type:func
ResetCallback                    = 0x800ABBD8;
InterruptCallback                = 0x800ABC08;
DMACallback                      = 0x800ABC38;
VSyncCallback                    = 0x800ABC68;
LoadExec                         = 0x800B2A78;
sprintf                          = 0x800B2A88;
func_800B37D0                    = 0x800B37D0; // type:func
InitGeom                         = 0x800B37D8;
ApplyMatrixSV                    = 0x800B5BF4;
abs                              = 0x800B5C54;
CdInit                           = 0x800B5C68;
SetDrawMode                      = 0x800B5DB8;
SetPolyF4                        = 0x800B65E0;
RotMatrixZYX_gte                 = 0x800B6EBC;
start                            = 0x800B70BC;
memset                           = 0x800B71D4;
AddPrim                          = 0x800B8880;
SsGetVoiceMask                   = 0x800B88D4;
RotMatrix                        = 0x800B88F0;
GetClut                          = 0x800B8B80;
CdRemove                         = 0x800B8BA8;
SetSemiTrans                     = 0x800B8BC0;
MulMatrix0                       = 0x800B8BF0;
_96_init                         = 0x800B8D00;
GetTPage                         = 0x800B8D10;
SetDefDrawEnv                    = 0x800B8D50;
VSync                            = 0x800B8E10;
v_wait                           = 0x800B8F88;
SetDefDispEnv                    = 0x800B9020;
__subsf3                         = 0x800B9080;
PushMatrix                       = 0x800B90E0;
PopMatrix                        = 0x800B9184;
__mulsf3                         = 0x800B9230;
__extendsfdf2                    = 0x800B9370;
csqrt_1                          = 0x800B94D0;
csqrt                            = 0x800B9624;
__floatsisf                      = 0x800B96C0;
__eqdf2                          = 0x800B9790;
__gtdf2                          = 0x800B97E0;
__gesf2                          = 0x800B98C0;
__ltdf2                          = 0x800B9960;
__lesf2                          = 0x800B9A40;
__eqsf2                          = 0x800B9AF0;
__gtsf2                          = 0x800B9B20;
rand                             = 0x800B9BC0;
func_800B9DB0                    = 0x800B9DB0; // type:func
func_800B9FC0                    = 0x800B9FC0; // type:func
func_800BA048                    = 0x800BA048; // type:func
__ltsf2                          = 0x800BA128;
rcos                             = 0x800BA1D8;
__fixsfsi                        = 0x800BA278;
rsin                             = 0x800BA328;
sin_1                            = 0x800BA364;
__addsf3                         = 0x800BA3F8;
SpuGetKeyStatus                  = 0x800BA5A8;
SpuInitMalloc                    = 0x800BA638;
SpuSetTransferMode               = 0x800BA698;
SpuSetTransferStartAddr          = 0x800BA6C8;
SpuFlush                         = 0x800BAD94;
SpuSetReverbModeParam            = 0x800BAF94;
SpuRead                          = 0x800BB474;
SpuGetVoicePitch                 = 0x800BB4D4;
SpuSetVoicePitch                 = 0x800BB4F4;
SpuSetCommonAttr                 = 0x800BB564;
SetVideoMode                     = 0x800B88C0;
CdSearchFile                     = 0x800BB8E4;
SpuSetKeyOnWithAttr              = 0x800BC254;
SsSetSerialVol                   = 0x800BC284;
SpuSetKey                        = 0x800BC394;
SpuMalloc                        = 0x800BC554;
SpuGetReverbVoice                = 0x800BC824;
SpuFree                          = 0x800BC854;
SpuSetReverbDepth                = 0x800BC8D4;
SpuSetReverbVoice                = 0x800BC954;
SpuSetReverb                     = 0x800BC984;
SsUtReverbOff                    = 0x800BCA54;
SpuSetVoiceVolume                = 0x800BCA74;
SpuIsTransferCompleted           = 0x800BCAF4;
SpuQuit                          = 0x800BCBA4;
LoadClut                         = 0x800BCC24;
SetTexWindow                     = 0x800BCC94;
__subdf3                         = 0x800BCD04;
__muldf3                         = 0x800BCD84;
_mul_mant_d                      = 0x800BD098;
__floatsidf                      = 0x800BD184;
__gedf2                          = 0x800BD2A4;
__ledf2                          = 0x800BD384;
__fixdfsi                        = 0x800BD4B4;
__adddf3                         = 0x800BD5B4;
SquareRoot0                      = 0x800BEB14;
__truncdfsf2                     = 0x800BEBA4;
__divsf3                         = 0x800BECD4;
memcpy                           = 0x800BEE24;
strstr                           = 0x800BEE64;
SquareRoot12                     = 0x800BEED4;
TransposeMatrix                  = 0x800BEF74;
ApplyMatrixLV                    = 0x800BEFE4;
EnableEvent                      = 0x800BF144;
OpenEvent                        = 0x800BF154;
CloseEvent                       = 0x800BF164;
HookEntryInt                     = 0x800BF1B0;
startIntrVSync                   = 0x800BF1C0;
startIntrDMA                     = 0x800BF2E0; // defined:true
trapIntrDMA                      = 0x800BF32C;
setIntrDMA                       = 0x800BF4AC;
memclr                           = 0x800BF558;
ExitCriticalSection              = 0x800BF580;
ReturnFromException              = 0x800BF590;
ChangeClearPAD                   = 0x800BF5A0;
ChangeClearRCnt                  = 0x800BF5B0;
EnterCriticalSection             = 0x800BF5C0;
ResetEntryInt                    = 0x800BF5D0;
GPU_cw                           = 0x800BF6AC;
memchr                           = 0x800BF6FC;
strlen                           = 0x800BF6BC;
memmove                          = 0x800BF74C;
strcat                           = 0x800BF7BC;
strcpy                           = 0x800BF86C;
_patch_gte                       = 0x800BF8BC;
DeliverEvent                     = 0x800C1148;
bcopy                            = 0x800C1158;
PadInitMtap                      = 0x800C1544;
InitHeap                         = 0x800C1DC4;
strncpy                          = 0x800C1E30;
puts                             = 0x800C1EA0;
_err_math                        = 0x800C1F00;
_dbl_shift                       = 0x800C1F70;
_SpuInit                         = 0x800C2A28;
SpuStart                         = 0x800C2B10;
_spu_setReverbAttr               = 0x800C2C18;
SpuClearReverbWorkArea           = 0x800C30E8;
strncmp                          = 0x800C3288;
strcmp                           = 0x800C3308;
SpuSetVoiceAttr                  = 0x800C3B78;
_spu_gcSPU                       = 0x800C4178;
_SpuGetAnyVoice                  = 0x800C4478;
_SpuSetAnyVoice                  = 0x800C44A8;
TestEvent                        = 0x800C4768;
_SpuDataCallback                 = 0x800C4778;
DisableEvent                     = 0x800C47A8;
__negdf2                         = 0x800C47B8;
_dbl_shift_us                    = 0x800C47F8;
_add_mant_d                      = 0x800C48B8;
_mainasu                         = 0x800C4968;
PAD_dr                           = 0x800C49D8;
bzero                            = 0x800C49E8;
SysDeqIntRP                      = 0x800C4A18;
SysEnqIntRP                      = 0x800C4A28;
FlushCache                       = 0x800C4A38;
PadStartCom                      = 0x800C4C6C;
_padInitMtapSeq                  = 0x800C62DC;
_mtapFailAuto                    = 0x800C6968;
WaitEvent                        = 0x800C6EA4;
setRC2wait                       = 0x800C6F84;
chkRC2wait                       = 0x800C6FA4;
write                            = 0x800C7674;

gCurrentAnimalIndex              = 0x800E52A4;

//LoadAndExecute                   = 0x800B2A78;
//CdInit2                          = 0x800B8D00;

// fake

D_FFE6C000 = 0xFFE6C000; // ignore:true
